{"ast":null,"code":"var _jsxFileName = \"/home/ana/projeto8-jogoforca/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./Reset.css\";\nimport \"./Style.css\";\nimport forca0 from \"./forca0.png\";\nimport forca1 from \"./forca1.png\";\nimport forca2 from \"./forca2.png\";\nimport forca3 from \"./forca3.png\";\nimport forca4 from \"./forca4.png\";\nimport forca5 from \"./forca5.png\";\nimport forca6 from \"./forca6.png\";\nimport alfabeto from \"./Letras\";\nimport palavras from \"./Palavras\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet palavraSorteada;\nlet palavraEscolhida;\nlet palavraLimpa;\nlet qteErros;\nlet erro;\nlet nErros = 0;\nlet teste;\nexport default function Forca() {\n  _s();\n\n  let letrasTentadas;\n  let palavraFoiEscolhida = false;\n  const [escolhida, setEscolhida] = useState([]);\n  const [letraS, setLetrasCertas] = useState([]);\n  const [jogavel, setJogo] = useState(\"desabilitado\");\n  const [chuteP, setChuteP] = useState(\"\");\n  const [iniciarJogo, setInicioJogo] = useState(palavraFoiEscolhida);\n  const [contador, setContador] = useState(nErros);\n  const [letrasCerta, setLetrasCerta] = useState([]); //Escolhe a palavra e habilita o jogo\n\n  function EscolherPalavra() {\n    palavraSorteada = palavras[Math.floor(Math.random() * palavras.length)]; //Escolhe uma palavra do array palavras\n\n    palavraLimpa = palavraSorteada.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n    palavraEscolhida = [...palavraLimpa];\n    setEscolhida(palavraEscolhida);\n    let inicio = true;\n    setInicioJogo(inicio);\n    setJogo(\"habilitado\");\n  } //Verifica a imagem da forca e erros\n\n\n  function Erros(qteErros) {\n    qteErros = contador + 1;\n    console.log(qteErros);\n\n    if (qteErros === 0) {\n      erro = forca0;\n    }\n\n    if (qteErros === 1) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: forca1,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false);\n    }\n\n    if (qteErros === 2) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: forca2,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)\n      }, void 0, false);\n    }\n\n    if (qteErros === 3) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: forca3,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false);\n    }\n\n    if (qteErros === 4) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: forca4,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false);\n    }\n\n    if (qteErros === 5) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: forca5,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false);\n    }\n\n    if (qteErros === 6) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: forca6,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)\n      }, void 0, false);\n    }\n  } //Renderiza as letras do alfabeto\n\n\n  function InserirLetras() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: alfabeto.map((l, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `tecladoL ${jogavel}  ${letraS.includes(l) ? \"desabilitado\" : \"\"}`,\n        onClick: iniciarJogo ? () => confereLetras(l) : () => alert(\"Escolha uma Palavra para iniciar o jogo\"),\n        children: l\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 41\n      }, this))\n    }, void 0, false);\n  } //INPUT\n\n\n  function InserirInput() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"J\\xE1 sei a palavra!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: chuteP,\n        onChange: event => setChuteP(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: ` ${jogavel}`,\n        onClick: iniciarJogo ? () => FazerChute : () => alert(\"Escolha uma Palavra para iniciar o jogo\"),\n        children: \"Chutar!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true);\n  } //VERIFICAR O CHUTE\n\n\n  function FazerChute() {\n    console.log(\"recebeu o chute\");\n    let testeChute = [...chuteP];\n\n    if (testeChute === palavraEscolhida) {\n      alert(\"VocÃª ganhou!\");\n    } else {\n      alert(\"Voce foi enforcado!\");\n    }\n  } //Conferir letras\n\n\n  function confereLetras(l) {\n    console.log(palavraEscolhida);\n    console.log(palavraEscolhida.includes(l));\n    letrasTentadas = [...letraS, l];\n    setLetrasCertas(letrasTentadas);\n\n    if (palavraEscolhida.includes(l)) {\n      //setLetrasCerta([...letrasCerta, l]);\n      for (let i = 0; i < palavraEscolhida; i++) {\n        if (l === palavraEscolhida) {\n          letrasCerta.push(l);\n        }\n      }\n\n      console.log(\"letra certa\");\n    } else {\n      Erros();\n      console.log(\"Letra errada\");\n    }\n  } //Renderiza a tela\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faixaSuperior\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: erro,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: EscolherPalavra,\n        children: \"Escolher Palavra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: escolhida.map((l, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: letrasCerta.includes(l) ? l : \"_\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 59\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 43\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"teclado\",\n      children: /*#__PURE__*/_jsxDEV(InserirLetras, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chute\",\n      children: /*#__PURE__*/_jsxDEV(InserirInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Forca, \"4YKufEv4DoLk7XMAZXInRkoRsu4=\");\n\n_c = Forca;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forca\");","map":{"version":3,"names":["useState","forca0","forca1","forca2","forca3","forca4","forca5","forca6","alfabeto","palavras","palavraSorteada","palavraEscolhida","palavraLimpa","qteErros","erro","nErros","teste","Forca","letrasTentadas","palavraFoiEscolhida","escolhida","setEscolhida","letraS","setLetrasCertas","jogavel","setJogo","chuteP","setChuteP","iniciarJogo","setInicioJogo","contador","setContador","letrasCerta","setLetrasCerta","EscolherPalavra","Math","floor","random","length","normalize","replace","inicio","Erros","console","log","InserirLetras","map","l","index","includes","confereLetras","alert","InserirInput","event","target","value","FazerChute","testeChute","i","push"],"sources":["/home/ana/projeto8-jogoforca/src/App.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport \"./Reset.css\";\r\nimport \"./Style.css\";\r\nimport forca0 from \"./forca0.png\";\r\nimport forca1 from \"./forca1.png\";\r\nimport forca2 from \"./forca2.png\";\r\nimport forca3 from \"./forca3.png\";\r\nimport forca4 from \"./forca4.png\";\r\nimport forca5 from \"./forca5.png\";\r\nimport forca6 from \"./forca6.png\";\r\nimport alfabeto from \"./Letras\";\r\nimport palavras from \"./Palavras\";\r\nlet palavraSorteada;\r\nlet palavraEscolhida;\r\nlet palavraLimpa;\r\nlet qteErros;\r\nlet erro;\r\nlet nErros = 0;\r\nlet teste;\r\nexport default function Forca(){\r\n    let letrasTentadas;\r\n    let palavraFoiEscolhida = false;\r\n    const [escolhida, setEscolhida] = useState([]);\r\n    const [letraS, setLetrasCertas] = useState([]);\r\n    const [jogavel, setJogo] = useState(\"desabilitado\");\r\n    const [chuteP, setChuteP] = useState(\"\");        \r\n    const [iniciarJogo, setInicioJogo] = useState(palavraFoiEscolhida);\r\n    const [contador, setContador] = useState(nErros);\r\n    const [letrasCerta, setLetrasCerta] = useState([]);\r\n    //Escolhe a palavra e habilita o jogo\r\n    function EscolherPalavra(){        \r\n        palavraSorteada = palavras[Math.floor(Math.random() * palavras.length)]; //Escolhe uma palavra do array palavras\r\n        palavraLimpa = palavraSorteada.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n        palavraEscolhida = [...palavraLimpa];\r\n        setEscolhida( palavraEscolhida)\r\n        let inicio = true;\r\n        setInicioJogo(inicio)\r\n        setJogo(\"habilitado\")}\r\n\r\n    //Verifica a imagem da forca e erros\r\n \r\n    function Erros(qteErros){\r\n        qteErros = contador +1;\r\n        console.log(qteErros);\r\n        if(qteErros === 0){\r\n            erro = forca0;\r\n            } if(qteErros === 1){\r\n            return(<>   \r\n                <img src={forca1} alt=\"\" />\r\n                </>)\r\n        } if(qteErros === 2){\r\n            return(<>   \r\n                <img src={forca2} alt=\"\" />\r\n                </>)\r\n        } if(qteErros === 3){\r\n            return(<>   \r\n                <img src={forca3} alt=\"\" />\r\n                </>)\r\n        } if(qteErros === 4){\r\n            return(<>   \r\n                <img src={forca4} alt=\"\" />\r\n                </>)\r\n        } if(qteErros === 5){\r\n            return(<>   \r\n                <img src={forca5} alt=\"\" />\r\n                </>)\r\n        } if(qteErros === 6){\r\n            return(<>   \r\n                <img src={forca6} alt=\"\" />\r\n                </>)\r\n        }\r\n    }\r\n\r\n    //Renderiza as letras do alfabeto\r\n    function InserirLetras(){\r\n        return (<>\r\n            {alfabeto.map((l, index) => <li key={index} \r\n            className={`tecladoL ${jogavel}  ${letraS.includes(l) ? \"desabilitado\" : \"\"}`} \r\n            onClick={iniciarJogo ? (() => confereLetras(l)) : (() => \r\n            alert(\"Escolha uma Palavra para iniciar o jogo\"))}>{l}</li>)}\r\n        </>)\r\n}   \r\n    //INPUT\r\n    function InserirInput(){\r\n        return(<>\r\n        <label>JÃ¡ sei a palavra!</label>\r\n        <input type=\"text\" value={chuteP} onChange={event => setChuteP(event.target.value)}></input>\r\n        <button className={` ${jogavel}`}\r\n        onClick={iniciarJogo ? (() => FazerChute) : (() => alert(\"Escolha uma Palavra para iniciar o jogo\"))}>Chutar!</button> </>)\r\n    }\r\n    //VERIFICAR O CHUTE\r\n    function FazerChute(){\r\n        console.log(\"recebeu o chute\");\r\n        let testeChute = [...chuteP];\r\n        if(testeChute === palavraEscolhida){            \r\n            alert(\"VocÃª ganhou!\")\r\n        } else {\r\n            alert(\"Voce foi enforcado!\")\r\n        }\r\n    }\r\n//Conferir letras\r\n    function confereLetras(l){\r\n       console.log(palavraEscolhida);\r\n       console.log(palavraEscolhida.includes(l));\r\n       letrasTentadas = [...letraS, l];\r\n       setLetrasCertas(letrasTentadas);\r\n        if(palavraEscolhida.includes(l)){        \r\n            //setLetrasCerta([...letrasCerta, l]);\r\n            for(let i =0; i < palavraEscolhida; i++){\r\n                if(l === palavraEscolhida){\r\n                    letrasCerta.push(l)\r\n                }\r\n            }\r\n            console.log(\"letra certa\")\r\n        } else {         \r\n            Erros()\r\n            console.log(\"Letra errada\")\r\n        }      \r\n    }\r\n    //Renderiza a tela\r\n    return (<div>\r\n    <div className=\"faixaSuperior\">\r\n        <img src={erro} alt=\"\" />\r\n        <button onClick={EscolherPalavra}>Escolher Palavra</button>\r\n        <ul>{escolhida.map((l, index) => (<li key={index}><div><p>{letrasCerta.includes(l) ? (l) : \"_\" }</p></div></li>))}</ul></div>\r\n    <ul className=\"teclado\"><InserirLetras /></ul>      \r\n    <div className=\"chute\"><InserirInput /></div>\r\n    </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}