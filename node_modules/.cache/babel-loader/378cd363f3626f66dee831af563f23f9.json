{"ast":null,"code":"var _jsxFileName = \"/home/ana/projeto8-jogoforca/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./Reset.css\";\nimport \"./Style.css\";\nimport forca0 from \"./forca0.png\";\nimport forca1 from \"./forca1.png\";\nimport forca2 from \"./forca2.png\";\nimport forca3 from \"./forca3.png\";\nimport forca4 from \"./forca4.png\";\nimport forca5 from \"./forca5.png\";\nimport forca6 from \"./forca6.png\";\nimport alfabeto from \"./Letras\";\nimport palavras from \"./Palavras\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet palavraSorteada;\nlet palavraEscolhida;\nlet palavraLimpa;\nlet qteErros;\nlet nErros = 0;\nexport default function Forca() {\n  _s();\n\n  let letrasTentadas;\n  let palavraFoiEscolhida = false;\n  const [estiloPalavraFinal, setEstiloFinal] = useState(\"\");\n  const [escolhida, setEscolhida] = useState([]);\n  const [letraS, setLetrasCertas] = useState([]);\n  const [jogavel, setJogo] = useState(\"desabilitado\");\n  const [chuteP, setChuteP] = useState(\"\");\n  const [iniciarJogo, setInicioJogo] = useState(palavraFoiEscolhida);\n  const [contador, setContador] = useState(nErros);\n  const [imagem, setImagem] = useState(forca0);\n  const [letrasCerta, setLetrasCerta] = useState([]); //Escolhe a palavra e habilita o jogo\n\n  function EscolherPalavra() {\n    palavraSorteada = palavras[Math.floor(Math.random() * palavras.length)]; //Escolhe uma palavra do array palavras\n\n    console.log(palavraSorteada);\n    palavraLimpa = palavraSorteada.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n    palavraEscolhida = [...palavraLimpa];\n    setEscolhida(palavraEscolhida);\n    let inicio = true;\n    setInicioJogo(inicio);\n    setJogo(\"habilitado\");\n  } //Verifica a imagem da forca e erros\n\n\n  function Erros(qteErros) {\n    qteErros = contador + 1;\n    setContador(qteErros);\n\n    if (qteErros === 1) {\n      setImagem(forca1);\n    }\n\n    if (qteErros === 2) {\n      setImagem(forca2);\n    }\n\n    if (qteErros === 3) {\n      setImagem(forca3);\n    }\n\n    if (qteErros === 4) {\n      setImagem(forca4);\n    }\n\n    if (qteErros === 5) {\n      setImagem(forca5);\n    }\n\n    if (qteErros === 6) {\n      setImagem(forca6);\n      perdeu();\n    }\n  } //Renderiza as letras do alfabeto\n\n\n  function InserirLetras() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: alfabeto.map((l, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `tecladoL ${jogavel}  ${letraS.includes(l) ? \"desabilitado\" : \"\"}`,\n        onClick: iniciarJogo ? () => confereLetras(l) : () => alert(\"Escolha uma Palavra para iniciar o jogo\"),\n        children: l\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 41\n      }, this))\n    }, void 0, false);\n  } //INPUT\n\n\n  function InserirInput() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"J\\xE1 sei a palavra!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: chuteP,\n        autoFocus: true,\n        onChange: e => setChuteP(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${jogavel}`,\n        onClick: iniciarJogo ? fazerChute : () => alert(\"Você errou! Clique em Escolha uma Palavra para iniciar o jogo\"),\n        children: \"Chutar!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true);\n  } //VERIFICAR O CHUTE\n\n\n  function fazerChute() {\n    console.log(\"recebeu o chute\");\n    console.log(chuteP);\n    let testeChuteL = chuteP.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n    let testeChute = [...testeChuteL];\n\n    if (testeChute === palavraEscolhida) {\n      setEscolhida(palavraEscolhida);\n      ganhou();\n      alert(\"Você ganhou!\");\n    } else {\n      setImagem(forca6);\n      setEscolhida(palavraEscolhida);\n      perdeu();\n      alert(\"Voce foi enforcado!\");\n    }\n  } //Conferir letras\n\n\n  function confereLetras(l) {\n    console.log(palavraEscolhida);\n    console.log(palavraEscolhida.includes(l));\n    letrasTentadas = [...letraS, l];\n    setLetrasCertas(letrasTentadas);\n\n    if (palavraEscolhida.includes(l)) {\n      setLetrasCerta([...letrasCerta, l]);\n      console.log(letrasCerta.length);\n\n      if (letrasCerta.length === palavraEscolhida.length) {\n        ganhou();\n      }\n\n      console.log(\"letra certa\");\n    } else {\n      Erros();\n      console.log(\"Letra errada\");\n    }\n  }\n\n  function perdeu() {\n    let terminado = false;\n    setInicioJogo(terminado);\n    setJogo(\"desabilitado\");\n    let jogo = \"perdeu\";\n    setEstiloFinal(jogo);\n  }\n\n  function ganhou() {\n    let terminado = false;\n    setInicioJogo(terminado);\n    setJogo(\"desabilitado\");\n    let jogo = \"ganhou\";\n    setEstiloFinal(jogo);\n  } //Renderiza a tela\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faixaSuperior\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagem,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: EscolherPalavra,\n        children: \"Escolher Palavra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: `palavra ${estiloPalavraFinal}`,\n        children: escolhida.map((l, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: letrasCerta.includes(l) ? l : \"_\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 108\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 103\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 87\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"teclado\",\n      children: /*#__PURE__*/_jsxDEV(InserirLetras, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chute\",\n      children: /*#__PURE__*/_jsxDEV(InserirInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Forca, \"kCgUim/3+LBG0PjKtJg6Z5hfT+E=\");\n\n_c = Forca;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forca\");","map":{"version":3,"names":["useState","forca0","forca1","forca2","forca3","forca4","forca5","forca6","alfabeto","palavras","palavraSorteada","palavraEscolhida","palavraLimpa","qteErros","nErros","Forca","letrasTentadas","palavraFoiEscolhida","estiloPalavraFinal","setEstiloFinal","escolhida","setEscolhida","letraS","setLetrasCertas","jogavel","setJogo","chuteP","setChuteP","iniciarJogo","setInicioJogo","contador","setContador","imagem","setImagem","letrasCerta","setLetrasCerta","EscolherPalavra","Math","floor","random","length","console","log","normalize","replace","inicio","Erros","perdeu","InserirLetras","map","l","index","includes","confereLetras","alert","InserirInput","e","target","value","fazerChute","testeChuteL","testeChute","ganhou","terminado","jogo"],"sources":["/home/ana/projeto8-jogoforca/src/App.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport \"./Reset.css\";\r\nimport \"./Style.css\";\r\nimport forca0 from \"./forca0.png\";\r\nimport forca1 from \"./forca1.png\";\r\nimport forca2 from \"./forca2.png\";\r\nimport forca3 from \"./forca3.png\";\r\nimport forca4 from \"./forca4.png\";\r\nimport forca5 from \"./forca5.png\";\r\nimport forca6 from \"./forca6.png\";\r\nimport alfabeto from \"./Letras\";\r\nimport palavras from \"./Palavras\";\r\nlet palavraSorteada;\r\nlet palavraEscolhida;\r\nlet palavraLimpa;\r\nlet qteErros;\r\nlet nErros = 0;\r\nexport default function Forca(){\r\n    let letrasTentadas;\r\n    let palavraFoiEscolhida = false;\r\n    const [estiloPalavraFinal, setEstiloFinal] = useState(\"\");\r\n    const [escolhida, setEscolhida] = useState([]);\r\n    const [letraS, setLetrasCertas] = useState([]);\r\n    const [jogavel, setJogo] = useState(\"desabilitado\");\r\n    const [chuteP, setChuteP] = useState(\"\");        \r\n    const [iniciarJogo, setInicioJogo] = useState(palavraFoiEscolhida);\r\n    const [contador, setContador] = useState(nErros);\r\n    const [imagem, setImagem] = useState(forca0)\r\n    const [letrasCerta, setLetrasCerta] = useState([]);\r\n    //Escolhe a palavra e habilita o jogo\r\n    function EscolherPalavra(){        \r\n        palavraSorteada = palavras[Math.floor(Math.random() * palavras.length)]; //Escolhe uma palavra do array palavras\r\n        console.log(palavraSorteada)\r\n        palavraLimpa = palavraSorteada.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n        palavraEscolhida = [...palavraLimpa];\r\n        setEscolhida( palavraEscolhida)\r\n        let inicio = true;\r\n        setInicioJogo(inicio)\r\n        setJogo(\"habilitado\")}\r\n\r\n    //Verifica a imagem da forca e erros\r\n    function Erros(qteErros){\r\n        qteErros = contador +1;\r\n        setContador(qteErros)\r\n        if(qteErros === 1){setImagem(forca1)            \r\n        } if(qteErros === 2){setImagem(forca2)\r\n        } if(qteErros === 3){setImagem(forca3)\r\n        } if(qteErros === 4){setImagem(forca4)\r\n        } if(qteErros === 5){setImagem(forca5)\r\n        } if(qteErros === 6){\r\n            setImagem(forca6) \r\n            perdeu()}\r\n    }\r\n\r\n    //Renderiza as letras do alfabeto\r\n    function InserirLetras(){\r\n        return (<>\r\n            {alfabeto.map((l, index) => <li key={index} \r\n            className={`tecladoL ${jogavel}  ${letraS.includes(l) ? \"desabilitado\" : \"\"}`} \r\n            onClick={iniciarJogo ? (() => confereLetras(l)) : (() => \r\n            alert(\"Escolha uma Palavra para iniciar o jogo\"))}>{l}</li>)}\r\n        </>)\r\n}   \r\n    //INPUT\r\n    function InserirInput(){\r\n        return(<>\r\n        <label>Já sei a palavra!</label>\r\n        <input type=\"text\" value={chuteP} autoFocus onChange={e => setChuteP(e.target.value)}></input>\r\n        <button className={`${jogavel}`} onClick={iniciarJogo ? (fazerChute) : (() => alert(\"Você errou! Clique em Escolha uma Palavra para iniciar o jogo\"))}>Chutar!</button> </>)\r\n    }\r\n    //VERIFICAR O CHUTE\r\n    function fazerChute(){\r\n        console.log(\"recebeu o chute\");\r\n        console.log(chuteP)\r\n        let testeChuteL = chuteP.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n        let testeChute = [...testeChuteL]\r\n        if(testeChute === palavraEscolhida){  \r\n            setEscolhida(palavraEscolhida)\r\n            ganhou()          \r\n            alert(\"Você ganhou!\")\r\n        } else {\r\n            setImagem(forca6)\r\n            setEscolhida(palavraEscolhida)\r\n            perdeu()\r\n            alert(\"Voce foi enforcado!\")\r\n        }\r\n    }\r\n//Conferir letras\r\n    function confereLetras(l){\r\n       console.log(palavraEscolhida);\r\n       console.log(palavraEscolhida.includes(l));\r\n       letrasTentadas = [...letraS, l];\r\n       setLetrasCertas(letrasTentadas);\r\n        if(palavraEscolhida.includes(l)){        \r\n            setLetrasCerta([...letrasCerta, l]);\r\n            console.log(letrasCerta.length)\r\n            if(letrasCerta.length === palavraEscolhida.length){\r\n                ganhou()\r\n            }\r\n            console.log(\"letra certa\")\r\n        } else {         \r\n            Erros()\r\n            console.log(\"Letra errada\")\r\n        }      \r\n    }\r\n    function perdeu(){\r\n        let terminado = false\r\n        setInicioJogo(terminado)\r\n        setJogo(\"desabilitado\")\r\n        let jogo = \"perdeu\"\r\n        setEstiloFinal(jogo)\r\n    }\r\n    function ganhou(){\r\n        let terminado = false\r\n        setInicioJogo(terminado)\r\n        setJogo(\"desabilitado\")\r\n        let jogo = \"ganhou\"\r\n        setEstiloFinal(jogo)\r\n    }\r\n    //Renderiza a tela\r\n    return (<div>\r\n    <div className=\"faixaSuperior\">\r\n        <img src={imagem} alt=\"\" />\r\n        <button onClick={EscolherPalavra}>Escolher Palavra</button>\r\n        <ul className={`palavra ${estiloPalavraFinal}`}>{escolhida.map((l, index) => (<li key={index}><div><p>{letrasCerta.includes(l) ? (l) : \"_\" }</p></div></li>))}</ul></div>\r\n    <ul className=\"teclado\"><InserirLetras /></ul>      \r\n    <div className=\"chute\"><InserirInput /></div>\r\n    </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}