{"ast":null,"code":"var _jsxFileName = \"/home/ana/projeto8-jogoforca/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./Reset.css\";\nimport \"./Style.css\";\nimport forca0 from \"./forca0.png\";\nimport forca1 from \"./forca1.png\";\nimport forca2 from \"./forca2.png\";\nimport forca3 from \"./forca3.png\";\nimport forca4 from \"./forca4.png\";\nimport forca5 from \"./forca5.png\";\nimport forca6 from \"./forca6.png\";\nimport alfabeto from \"./Letras\";\nimport palavras from \"./Palavras\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet palavraSorteada;\nlet palavraEscolhida;\nlet palavraLimpa;\nlet qteErros;\nlet nErros = 0;\nlet teste;\nexport default function Forca() {\n  _s();\n\n  let letrasTentadas;\n  let palavraFoiEscolhida = false;\n  const [escolhida, setEscolhida] = useState([]);\n  const [letraS, setLetrasCertas] = useState([]);\n  const [jogavel, setJogo] = useState(\"desabilitado\");\n  const [chuteP, setChuteP] = useState(\"\");\n  const [iniciarJogo, setInicioJogo] = useState(palavraFoiEscolhida); //const [contador, setContador] = useState(nErros);\n\n  const [letrasCerta, setLetrasCerta] = useState([]); //Escolhe a palavra e habilita o jogo\n\n  function EscolherPalavra() {\n    palavraSorteada = palavras[Math.floor(Math.random() * palavras.length)]; //Escolhe uma palavra do array palavras\n\n    palavraLimpa = palavraSorteada.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n    palavraEscolhida = [...palavraLimpa];\n    setEscolhida(palavraEscolhida);\n    teste = escolhida.map(l => escolhida.includes(l) ? l : \"_\");\n    let inicio = true;\n    setInicioJogo(inicio);\n    setJogo(\"habilitado\");\n  } //Verifica a imagem da forca e erros\n\n\n  function Erros(qteErros) {\n    console.log(qteErros);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: forca0,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n    /*if(qteErros === 0){\r\n        } if(qteErros === 1){\r\n        return(<>   \r\n            <img src={forca1} alt=\"\" />\r\n            </>)\r\n    } if(qteErros === 2){\r\n        return(<>   \r\n            <img src={forca2} alt=\"\" />\r\n            </>)\r\n    } if(qteErros === 3){\r\n        return(<>   \r\n            <img src={forca3} alt=\"\" />\r\n            </>)\r\n    } if(qteErros === 4){\r\n        return(<>   \r\n            <img src={forca4} alt=\"\" />\r\n            </>)\r\n    } if(qteErros === 5){\r\n        return(<>   \r\n            <img src={forca5} alt=\"\" />\r\n            </>)\r\n    } if(qteErros === 6){\r\n        return(<>   \r\n            <img src={forca6} alt=\"\" />\r\n            </>)\r\n    }*/\n  } //Renderiza as letras do alfabeto\n\n\n  function InserirLetras() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: alfabeto.map((l, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `tecladoL ${jogavel}  ${letraS.includes(l) ? \"desabilitado\" : \"\"}`,\n        onClick: iniciarJogo ? () => confereLetras(l) : () => alert(\"Escolha uma Palavra para iniciar o jogo\"),\n        children: l\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 41\n      }, this))\n    }, void 0, false);\n  } //INPUT\n\n\n  function InserirInput() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"J\\xE1 sei a palavra!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: chuteP,\n        onChange: event => setChuteP(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: ` ${jogavel}`,\n        onClick: iniciarJogo ? () => FazerChute : () => alert(\"Escolha uma Palavra para iniciar o jogo\"),\n        children: \"Chutar!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true);\n  } //VERIFICAR O CHUTE\n\n\n  function FazerChute() {\n    console.log(\"recebeu o chute\");\n    let testeChute = [...chuteP];\n\n    if (testeChute === palavraEscolhida) {\n      alert(\"VocÃª ganhou!\");\n    } else {\n      alert(\"Voce foi enforcado!\");\n    }\n  } //Conferir letras\n\n\n  function confereLetras(l) {\n    console.log(palavraEscolhida);\n    console.log(palavraEscolhida.includes(l));\n\n    if (palavraEscolhida.includes(l)) {\n      letrasTentadas = [...letraS, l];\n      console.log(letrasTentadas);\n      setLetrasCertas(letrasTentadas);\n      setLetrasCerta([...letrasCerta, l]);\n      console.log(\"letra certa\");\n    } else {\n      letrasTentadas = [...letraS, l];\n      console.log(letrasTentadas);\n      setLetrasCertas(letrasTentadas);\n      console.log(\"Letra errada\");\n    }\n  } //Renderiza a tela\n\n\n  console.log(palavraEscolhida);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faixaSuperior\",\n      children: [/*#__PURE__*/_jsxDEV(Erros, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: EscolherPalavra,\n        children: \"Escolher Palavra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), console.log(palavraEscolhida), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: escolhida\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"teclado\",\n      children: /*#__PURE__*/_jsxDEV(InserirLetras, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chute\",\n      children: /*#__PURE__*/_jsxDEV(InserirInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Forca, \"8PQ23xkLQ/Ua1QlyhV7wKIOgPz8=\");\n\n_c = Forca;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forca\");","map":{"version":3,"names":["useState","forca0","forca1","forca2","forca3","forca4","forca5","forca6","alfabeto","palavras","palavraSorteada","palavraEscolhida","palavraLimpa","qteErros","nErros","teste","Forca","letrasTentadas","palavraFoiEscolhida","escolhida","setEscolhida","letraS","setLetrasCertas","jogavel","setJogo","chuteP","setChuteP","iniciarJogo","setInicioJogo","letrasCerta","setLetrasCerta","EscolherPalavra","Math","floor","random","length","normalize","replace","map","l","includes","inicio","Erros","console","log","InserirLetras","index","confereLetras","alert","InserirInput","event","target","value","FazerChute","testeChute"],"sources":["/home/ana/projeto8-jogoforca/src/App.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport \"./Reset.css\";\r\nimport \"./Style.css\";\r\nimport forca0 from \"./forca0.png\";\r\nimport forca1 from \"./forca1.png\";\r\nimport forca2 from \"./forca2.png\";\r\nimport forca3 from \"./forca3.png\";\r\nimport forca4 from \"./forca4.png\";\r\nimport forca5 from \"./forca5.png\";\r\nimport forca6 from \"./forca6.png\";\r\nimport alfabeto from \"./Letras\";\r\nimport palavras from \"./Palavras\";\r\nlet palavraSorteada;\r\nlet palavraEscolhida;\r\nlet palavraLimpa;\r\nlet qteErros;\r\nlet nErros = 0;\r\nlet teste;\r\nexport default function Forca(){\r\n    let letrasTentadas;\r\n    let palavraFoiEscolhida = false;\r\n    const [escolhida, setEscolhida] = useState([]);\r\n    const [letraS, setLetrasCertas] = useState([]);\r\n    const [jogavel, setJogo] = useState(\"desabilitado\");\r\n    const [chuteP, setChuteP] = useState(\"\");        \r\n    const [iniciarJogo, setInicioJogo] = useState(palavraFoiEscolhida);\r\n    //const [contador, setContador] = useState(nErros);\r\n    const [letrasCerta, setLetrasCerta] = useState([]);\r\n    //Escolhe a palavra e habilita o jogo\r\n    function EscolherPalavra(){        \r\n        palavraSorteada = palavras[Math.floor(Math.random() * palavras.length)]; //Escolhe uma palavra do array palavras\r\n        palavraLimpa = palavraSorteada.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n        palavraEscolhida = [...palavraLimpa];\r\n        setEscolhida( palavraEscolhida)\r\n        teste = escolhida.map((l) => (escolhida.includes(l) ? (l) : \"_\" ))\r\n        let inicio = true;\r\n        setInicioJogo(inicio)\r\n        setJogo(\"habilitado\")}\r\n\r\n    //Verifica a imagem da forca e erros\r\n \r\n    function Erros(qteErros){\r\n        console.log(qteErros)\r\n        return(<>   \r\n            <img src= {forca0} alt=\"\" />\r\n            </>)\r\n        \r\n        /*if(qteErros === 0){\r\n            } if(qteErros === 1){\r\n            return(<>   \r\n                <img src={forca1} alt=\"\" />\r\n                </>)\r\n        } if(qteErros === 2){\r\n            return(<>   \r\n                <img src={forca2} alt=\"\" />\r\n                </>)\r\n        } if(qteErros === 3){\r\n            return(<>   \r\n                <img src={forca3} alt=\"\" />\r\n                </>)\r\n        } if(qteErros === 4){\r\n            return(<>   \r\n                <img src={forca4} alt=\"\" />\r\n                </>)\r\n        } if(qteErros === 5){\r\n            return(<>   \r\n                <img src={forca5} alt=\"\" />\r\n                </>)\r\n        } if(qteErros === 6){\r\n            return(<>   \r\n                <img src={forca6} alt=\"\" />\r\n                </>)\r\n        }*/   \r\n    }\r\n\r\n    //Renderiza as letras do alfabeto\r\n    function InserirLetras(){\r\n        return (<>\r\n            {alfabeto.map((l, index) => <li key={index} \r\n            className={`tecladoL ${jogavel}  ${letraS.includes(l) ? \"desabilitado\" : \"\"}`} \r\n            onClick={iniciarJogo ? (() => confereLetras(l)) : (() => \r\n            alert(\"Escolha uma Palavra para iniciar o jogo\"))}>{l}</li>)}\r\n        </>)\r\n}   \r\n    //INPUT\r\n    function InserirInput(){\r\n        return(<>\r\n        <label>JÃ¡ sei a palavra!</label>\r\n        <input type=\"text\" value={chuteP} onChange={event => setChuteP(event.target.value)}></input>\r\n        <button className={` ${jogavel}`}\r\n        onClick={iniciarJogo ? (() => FazerChute) : (() => alert(\"Escolha uma Palavra para iniciar o jogo\"))}>Chutar!</button> </>)\r\n    }\r\n    //VERIFICAR O CHUTE\r\n    function FazerChute(){\r\n        console.log(\"recebeu o chute\");\r\n        let testeChute = [...chuteP];\r\n        if(testeChute === palavraEscolhida){            \r\n            alert(\"VocÃª ganhou!\")\r\n        } else {\r\n            alert(\"Voce foi enforcado!\")\r\n        }\r\n    }\r\n//Conferir letras\r\n    function confereLetras(l){\r\n       console.log(palavraEscolhida);\r\n       console.log(palavraEscolhida.includes(l));    \r\n        if(palavraEscolhida.includes(l)){            \r\n            letrasTentadas = [...letraS, l];\r\n            console.log(letrasTentadas);\r\n            setLetrasCertas(letrasTentadas);\r\n            setLetrasCerta([...letrasCerta, l]);\r\n            console.log(\"letra certa\")\r\n        } else {\r\n            letrasTentadas = [...letraS, l];\r\n            console.log(letrasTentadas);\r\n            setLetrasCertas(letrasTentadas);\r\n            console.log(\"Letra errada\")\r\n        }      \r\n    }\r\n    //Renderiza a tela\r\n    console.log(palavraEscolhida)\r\n    return (<div>\r\n    <div className=\"faixaSuperior\">\r\n        <Erros />\r\n        <button onClick={EscolherPalavra}>Escolher Palavra</button>\r\n        {console.log(palavraEscolhida)}\r\n        <p>{escolhida}</p>\r\n    </div>  \r\n    <ul className=\"teclado\"><InserirLetras /></ul>      \r\n    <div className=\"chute\"><InserirInput /></div>\r\n    </div>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}