{"ast":null,"code":"var _jsxFileName = \"/home/ana/projeto8-jogoforca/src/App.js\";\nimport { useState } from \"react\";\nimport \"./Reset.css\";\nimport \"./Style.css\";\nimport forca0 from \"./forca0.png\";\nimport forca1 from \"./forca1.png\";\nimport forca2 from \"./forca2.png\";\nimport forca3 from \"./forca3.png\";\nimport forca4 from \"./forca4.png\";\nimport forca5 from \"./forca5.png\";\nimport forca6 from \"./forca6.png\";\nimport alfabeto from \"./Letras\";\nimport palavras from \"./Palavras\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet palavraSorteada;\nlet palavraEscolhida;\nlet palavraLimpa;\nlet qteErros;\nlet nErros = 0;\nlet letrasTentadas;\nlet palavraFoiEscolhida = false;\nconst [estiloPalavraFinal, setEstiloFinal] = useState(\"\");\nconst [escolhida, setEscolhida] = useState([]);\nconst [letraS, setLetrasClicadas] = useState([]); //Recebe todas as letras clicadas\n\nconst [jogavel, setJogo] = useState(\"desabilitado\");\nconst [chuteP, setChuteP] = useState(\"\");\nconst [iniciarJogo, setInicioJogo] = useState(palavraFoiEscolhida);\nconst [contador, setContador] = useState(nErros);\nconst [imagem, setImagem] = useState(forca0);\nconst [letrasCerta, setLetrasCerta] = useState([]); //Recebe as letras clicadas que pertencem a palavra\n\nconst [palavraFim, setPalavraFim] = useState([]); //Escolhe a palavra e habilita o jogo\n\nfunction EscolherPalavra() {\n  palavraSorteada = palavras[Math.floor(Math.random() * palavras.length)]; //Escolhe uma palavra do array palavras\n\n  console.log(palavraSorteada);\n  palavraLimpa = palavraSorteada.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n  palavraEscolhida = [...palavraLimpa];\n  letrasTentadas = [];\n  setContador(0);\n  setLetrasClicadas([]);\n  setLetrasCerta([]);\n  setImagem(forca0);\n  setEstiloFinal(\"\");\n  setPalavraFim([]);\n  setEscolhida(palavraEscolhida);\n  let inicio = true;\n  setInicioJogo(inicio);\n  setJogo(\"habilitado\");\n} //Verifica a imagem da forca e erros\n\n\n_c = EscolherPalavra;\n\nfunction Erros(qteErros) {\n  qteErros = contador + 1;\n  setContador(qteErros);\n\n  if (qteErros === 1) {\n    setImagem(forca1);\n    console.log(qteErros);\n  }\n\n  if (qteErros === 2) {\n    setImagem(forca2);\n    console.log(qteErros);\n  }\n\n  if (qteErros === 3) {\n    setImagem(forca3);\n    console.log(qteErros);\n  }\n\n  if (qteErros === 4) {\n    setImagem(forca4);\n    console.log(qteErros);\n  }\n\n  if (qteErros === 5) {\n    setImagem(forca5);\n  }\n\n  if (qteErros === 6) {\n    console.log(qteErros);\n    setImagem(forca6);\n    perdeu();\n  }\n} //Renderiza as letras do alfabeto\n\n\n_c2 = Erros;\n\nfunction InserirLetras() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: alfabeto.map((l, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `tecladoL ${jogavel}  ${letraS.includes(l) ? \"desabilitado\" : \"\"}`,\n      onClick: iniciarJogo ? () => confereLetras(l) : () => alert(\"Escolha uma Palavra para iniciar o jogo\"),\n      children: l\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 41\n    }, this))\n  }, void 0, false);\n} //INPUT\n\n\n_c3 = InserirLetras;\n\nfunction InserirInput() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"J\\xE1 sei a palavra!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: chuteP,\n      autoFocus: true,\n      onChange: e => setChuteP(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${jogavel}`,\n      onClick: iniciarJogo ? fazerChute : () => alert(\"Você errou! Clique em Escolha uma Palavra para iniciar o jogo\"),\n      children: \"Chutar!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true);\n} //VERIFICAR O CHUTE\n\n\n_c4 = InserirInput;\n\nfunction fazerChute() {\n  console.log(\"recebeu o chute\");\n  console.log(chuteP);\n  let testeChuteL = chuteP.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n  let testeChute = [...testeChuteL];\n\n  if (JSON.stringify(testeChute) === JSON.stringify(palavraEscolhida)) {\n    setEscolhida([]);\n    setPalavraFim(palavraEscolhida);\n    ganhou();\n    alert(\"Você ganhou!\");\n  } else {\n    setImagem(forca6);\n    setEscolhida([]);\n    setPalavraFim(palavraEscolhida);\n    perdeu();\n    alert(\"Voce foi enforcado!\");\n  }\n} //Conferir letras\n\n\nfunction confereLetras(l) {\n  //console.log(palavraEscolhida);\n  //console.log(palavraEscolhida.includes(l));    \n  if (palavraEscolhida.includes(l)) {\n    letrasTentadas = [...letraS, l];\n    setLetrasClicadas(letrasTentadas);\n    setLetrasCerta([...letrasCerta, l]); //console.log(letrasCerta.length)\n\n    console.log(letrasCerta);\n    var letrasEscolhidasFiltrada = [...new Set(letrasCerta)];\n    var escolhidaFiltrada = [...new Set(palavraEscolhida)];\n    console.log(escolhidaFiltrada); //console.log(letrasEscolhidasFiltrada)\n\n    if (escolhidaFiltrada.length - 1 === letrasEscolhidasFiltrada.length) {\n      console.log(\"Foram selecionadas todas as letras certas\");\n      let teste1 = escolhidaFiltrada.sort();\n      console.log(teste1);\n      let teste2 = letrasEscolhidasFiltrada.sort();\n      console.log(teste2);\n\n      if (JSON.stringify(letrasEscolhidasFiltrada) === JSON.stringify(escolhidaFiltrada)) {\n        console.log(JSON.stringify(letrasEscolhidasFiltrada));\n        console.log(JSON.stringify(escolhidaFiltrada));\n        ganhou();\n      }\n    }\n\n    console.log(\"letra certa\");\n  } else {\n    letrasTentadas = [...letraS, l];\n    setLetrasClicadas(letrasTentadas);\n    console.log(letrasCerta);\n    Erros();\n    console.log(\"Letra errada\");\n  }\n}\n\nfunction perdeu() {\n  let terminado = false;\n  setContador(0);\n  setEscolhida([]);\n  setInicioJogo(terminado);\n  setPalavraFim(palavraEscolhida);\n  setJogo(\"desabilitado\");\n  let jogo = \"perdeu\";\n  setEstiloFinal(jogo);\n}\n\nfunction ganhou() {\n  setImagem(forca0);\n  setPalavraFim(palavraEscolhida);\n  setContador(0);\n  setEscolhida([]);\n  let terminado = false;\n  setInicioJogo(terminado);\n  setJogo(\"desabilitado\");\n  let jogo = \"ganhou\";\n  setEstiloFinal(jogo);\n} //Renderiza a tela\n\n\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faixaSuperior\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagem,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: EscolherPalavra,\n        children: \"Escolher Palavra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: `palavra ${estiloPalavraFinal}`,\n        children: [palavraFim, escolhida.map((l, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: letrasCerta.includes(l) ? l : \"_\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 120\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 115\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 99\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"teclado\",\n      children: /*#__PURE__*/_jsxDEV(InserirLetras, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chute\",\n      children: /*#__PURE__*/_jsxDEV(InserirInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 13\n  }, this);\n}\n_c5 = App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"EscolherPalavra\");\n$RefreshReg$(_c2, \"Erros\");\n$RefreshReg$(_c3, \"InserirLetras\");\n$RefreshReg$(_c4, \"InserirInput\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["useState","forca0","forca1","forca2","forca3","forca4","forca5","forca6","alfabeto","palavras","palavraSorteada","palavraEscolhida","palavraLimpa","qteErros","nErros","letrasTentadas","palavraFoiEscolhida","estiloPalavraFinal","setEstiloFinal","escolhida","setEscolhida","letraS","setLetrasClicadas","jogavel","setJogo","chuteP","setChuteP","iniciarJogo","setInicioJogo","contador","setContador","imagem","setImagem","letrasCerta","setLetrasCerta","palavraFim","setPalavraFim","EscolherPalavra","Math","floor","random","length","console","log","normalize","replace","inicio","Erros","perdeu","InserirLetras","map","l","index","includes","confereLetras","alert","InserirInput","e","target","value","fazerChute","testeChuteL","testeChute","JSON","stringify","ganhou","letrasEscolhidasFiltrada","Set","escolhidaFiltrada","teste1","sort","teste2","terminado","jogo","App"],"sources":["/home/ana/projeto8-jogoforca/src/App.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport \"./Reset.css\";\r\nimport \"./Style.css\";\r\nimport forca0 from \"./forca0.png\";\r\nimport forca1 from \"./forca1.png\";\r\nimport forca2 from \"./forca2.png\";\r\nimport forca3 from \"./forca3.png\";\r\nimport forca4 from \"./forca4.png\";\r\nimport forca5 from \"./forca5.png\";\r\nimport forca6 from \"./forca6.png\";\r\nimport alfabeto from \"./Letras\";\r\nimport palavras from \"./Palavras\";\r\nlet palavraSorteada;\r\nlet palavraEscolhida;\r\nlet palavraLimpa;\r\nlet qteErros;\r\nlet nErros = 0;\r\nlet letrasTentadas;\r\n    let palavraFoiEscolhida = false;\r\n    const [estiloPalavraFinal, setEstiloFinal] = useState(\"\");\r\n    const [escolhida, setEscolhida] = useState([]);\r\n    const [letraS, setLetrasClicadas] = useState([]); //Recebe todas as letras clicadas\r\n    const [jogavel, setJogo] = useState(\"desabilitado\");\r\n    const [chuteP, setChuteP] = useState(\"\");        \r\n    const [iniciarJogo, setInicioJogo] = useState(palavraFoiEscolhida);\r\n    const [contador, setContador] = useState(nErros);\r\n    const [imagem, setImagem] = useState(forca0)\r\n    const [letrasCerta, setLetrasCerta] = useState([]); //Recebe as letras clicadas que pertencem a palavra\r\n    const [palavraFim, setPalavraFim] = useState([]);\r\n    //Escolhe a palavra e habilita o jogo\r\n    function EscolherPalavra(){        \r\n        palavraSorteada = palavras[Math.floor(Math.random() * palavras.length)]; //Escolhe uma palavra do array palavras\r\n        console.log(palavraSorteada)\r\n        palavraLimpa = palavraSorteada.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n        palavraEscolhida = [...palavraLimpa];      \r\n        letrasTentadas = []  \r\n        setContador(0)\r\n        setLetrasClicadas([])\r\n        setLetrasCerta([])\r\n        setImagem(forca0)\r\n        setEstiloFinal(\"\")\r\n        setPalavraFim([])\r\n        setEscolhida( palavraEscolhida)\r\n        let inicio = true;\r\n        setInicioJogo(inicio)\r\n        setJogo(\"habilitado\")}\r\n\r\n    //Verifica a imagem da forca e erros\r\n    function Erros(qteErros){\r\n        qteErros = contador +1;\r\n        setContador(qteErros)\r\n        if(qteErros === 1){setImagem(forca1)    \r\n            console.log(qteErros)        \r\n        } if(qteErros === 2){setImagem(forca2)\r\n            console.log(qteErros)\r\n        } if(qteErros === 3){setImagem(forca3)\r\n            console.log(qteErros)\r\n        } if(qteErros === 4){setImagem(forca4)\r\n            console.log(qteErros)\r\n        } if(qteErros === 5){setImagem(forca5)\r\n        } if(qteErros === 6){\r\n            console.log(qteErros)\r\n            setImagem(forca6) \r\n            perdeu()}\r\n    }\r\n\r\n    //Renderiza as letras do alfabeto\r\n    function InserirLetras(){\r\n        return (<>\r\n            {alfabeto.map((l, index) => <li key={index} \r\n            className={`tecladoL ${jogavel}  ${letraS.includes(l) ? \"desabilitado\" : \"\"}`} \r\n            onClick={iniciarJogo ? (() => confereLetras(l)) : (() => \r\n            alert(\"Escolha uma Palavra para iniciar o jogo\"))}>{l}</li>)}\r\n        </>)\r\n    }   \r\n    //INPUT\r\n    function InserirInput(){\r\n        return(<>\r\n        <label>Já sei a palavra!</label>\r\n        <input type=\"text\" value={chuteP} autoFocus onChange={e => setChuteP(e.target.value)}></input>\r\n        <button className={`${jogavel}`} onClick={iniciarJogo ? (fazerChute) : (() => alert(\"Você errou! Clique em Escolha uma Palavra para iniciar o jogo\"))}>Chutar!</button> </>)\r\n    }\r\n    //VERIFICAR O CHUTE\r\n    function fazerChute(){\r\n        console.log(\"recebeu o chute\");\r\n        console.log(chuteP)\r\n        let testeChuteL = chuteP.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n        let testeChute = [...testeChuteL]\r\n        if(JSON.stringify(testeChute)===JSON.stringify(palavraEscolhida)){  \r\n            setEscolhida([])\r\n            setPalavraFim(palavraEscolhida)\r\n            ganhou()          \r\n            alert(\"Você ganhou!\")\r\n        } else {\r\n            setImagem(forca6)\r\n            setEscolhida([])\r\n            setPalavraFim(palavraEscolhida)\r\n            perdeu()\r\n            alert(\"Voce foi enforcado!\")\r\n        }\r\n    }\r\n    //Conferir letras\r\n    function confereLetras(l){\r\n       //console.log(palavraEscolhida);\r\n       //console.log(palavraEscolhida.includes(l));    \r\n        if(palavraEscolhida.includes(l)){     \r\n            letrasTentadas = [...letraS, l];\r\n            setLetrasClicadas(letrasTentadas);\r\n            setLetrasCerta([...letrasCerta, l]);\r\n            //console.log(letrasCerta.length)\r\n            console.log(letrasCerta)\r\n            var letrasEscolhidasFiltrada = [...new Set(letrasCerta)]\r\n            var escolhidaFiltrada = [...new Set(palavraEscolhida)]            \r\n            console.log(escolhidaFiltrada)\r\n            //console.log(letrasEscolhidasFiltrada)\r\n            if((escolhidaFiltrada.length-1) === letrasEscolhidasFiltrada.length){\r\n                console.log(\"Foram selecionadas todas as letras certas\")\r\n                let teste1 = escolhidaFiltrada.sort()\r\n                console.log(teste1)\r\n                let teste2 = letrasEscolhidasFiltrada.sort()\r\n                console.log(teste2)\r\n                if(JSON.stringify(letrasEscolhidasFiltrada)===JSON.stringify(escolhidaFiltrada)){\r\n                                console.log(JSON.stringify(letrasEscolhidasFiltrada))\r\n                                console.log(JSON.stringify(escolhidaFiltrada))\r\n                                ganhou()\r\n                            } }            \r\n            console.log(\"letra certa\")\r\n        } else {         \r\n            letrasTentadas = [...letraS, l];\r\n            setLetrasClicadas(letrasTentadas);\r\n            console.log(letrasCerta)\r\n            Erros()\r\n            console.log(\"Letra errada\")\r\n        }      \r\n    }\r\n    function perdeu(){\r\n        let terminado = false\r\n        setContador(0)\r\n        setEscolhida([])\r\n        setInicioJogo(terminado)\r\n        setPalavraFim(palavraEscolhida)\r\n        setJogo(\"desabilitado\")\r\n        let jogo = \"perdeu\"\r\n        setEstiloFinal(jogo)\r\n    }\r\n    function ganhou(){\r\n        setImagem(forca0)\r\n        setPalavraFim(palavraEscolhida)\r\n        setContador(0)\r\n        setEscolhida([])\r\n        let terminado = false\r\n        setInicioJogo(terminado)\r\n        setJogo(\"desabilitado\")\r\n        let jogo = \"ganhou\"\r\n        setEstiloFinal(jogo)\r\n    }\r\n    //Renderiza a tela\r\nexport default function App(){    \r\n    return (<div>\r\n    <div className=\"faixaSuperior\">\r\n        <img src={imagem} alt=\"\" />\r\n        <button onClick={EscolherPalavra}>Escolher Palavra</button>\r\n        <ul className={`palavra ${estiloPalavraFinal}`}>{palavraFim}{escolhida.map((l, index) => (<li key={index}><div><p>{letrasCerta.includes(l) ? (l) : \"_\" }</p></div></li>))}</ul></div>\r\n    <ul className=\"teclado\"><InserirLetras /></ul>      \r\n    <div className=\"chute\"><InserirInput /></div>\r\n    </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}