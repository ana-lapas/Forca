{"ast":null,"code":"var _jsxFileName = \"/home/ana/projeto8-jogoforca/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./Reset.css\";\nimport \"./Style.css\";\nimport forca0 from \"./forca0.png\";\nimport alfabeto from \"./Letras\";\nimport palavras from \"./Palavras\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet palavraEscolhida;\nlet nErros;\nexport default function Forca() {\n  _s();\n\n  let letrasTentadas;\n  let pDividida;\n  let lacunas = [];\n  let palavraFoiEscolhida = false;\n  const [escolhida, setEscolhida] = useState(\"\");\n  const [letraS, setLetrasCertas] = useState([]);\n  const [jogavel, setJogo] = useState(\"desabilitado\");\n  const [chuteP, setChuteP] = useState(\"\");\n  const [iniciarJogo, setInicioJogo] = useState(palavraFoiEscolhida); // const [arrayC, setVerificarLetra] = useState(palavraEscolhida)\n  //Escolhe a palavra e habilita o jogo\n\n  function EscolherPalavra() {\n    palavraEscolhida = palavras[Math.floor(Math.random() * palavras.length)]; //Escolhe uma palavra do array palavras\n\n    console.log(palavraEscolhida);\n    let inicio = true;\n    RenderizaLacunas(palavraEscolhida);\n    setInicioJogo(inicio);\n    setJogo(\"habilitado\");\n  } //Renderizar as lacunas\n\n\n  function RenderizaLacunas(palavraEscolhida) {\n    pDividida = [...palavraEscolhida];\n    console.log(pDividida);\n\n    for (let i = 0; i < pDividida.length; i++) {\n      lacunas.push(\"_\");\n    }\n\n    setEscolhida(lacunas);\n  } //Verifica a imagem da forca e erros\n\n\n  function Erros() {\n    let n = 0;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: forca0,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } //Renderiza as letras do alfabeto\n\n\n  function InserirLetras() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: alfabeto.map((l, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `tecladoL ${jogavel}  ${letraS.includes(l) ? \"desabilitado\" : \"\"}`,\n        onClick: iniciarJogo ? () => confereLetras(l) : () => alert(\"Escolha uma Palavra para iniciar o jogo\"),\n        children: l\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 41\n      }, this))\n    }, void 0, false);\n  } //INPUT\n\n\n  function InserirInput() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"J\\xE1 sei a palavra!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: chuteP,\n        onChange: event => setChuteP(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: ` ${jogavel}`,\n        onClick: iniciarJogo ? () => FazerChute : () => alert(\"Escolha uma Palavra para iniciar o jogo\"),\n        children: \"Chutar!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true);\n  } //VERIFICAR O CHUTE\n\n\n  function FazerChute() {\n    console.log(\"recebeu o chute\");\n    let testeChute = [...chuteP]; //veriricar como usar o prop console.log(pDividida);\n\n    /*if(testeChute === palavraEscolhida){            \r\n        alert(\"Você ganhou!\")\r\n    } else {\r\n        alert(\"Voce foi enforcado!\")\r\n    } */\n  } //Conferir letras\n\n\n  function confereLetras(l) {\n    // let qteErros = 0;\n    console.log(palavraEscolhida);\n    console.log(palavraEscolhida.includes(l));\n\n    if (!palavraEscolhida.includes(l)) {\n      letrasTentadas = [...letraS, l];\n      console.log(letrasTentadas);\n      setLetrasCertas(letrasTentadas);\n      console.log(\"Letra errada\");\n    }\n\n    if (palavraEscolhida.includes(l)) {\n      letrasTentadas = [...letraS, l];\n      console.log(letrasTentadas);\n      setLetrasCertas(letrasTentadas);\n      console.log(\"letracerta\");\n    }\n    /*{ver como trazer a pDividida pra cá e como fazer para se a letra\r\n         estiver contida em pDividida fazer ela aparecer na lacuna}*/\n\n  } //Conferir acentos: string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n  //Renderiza a tela\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faixaSuperior\",\n      children: [/*#__PURE__*/_jsxDEV(Erros, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: EscolherPalavra,\n        children: \"Escolher Palavra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: escolhida\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"teclado\",\n      children: /*#__PURE__*/_jsxDEV(InserirLetras, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chute\",\n      children: /*#__PURE__*/_jsxDEV(InserirInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Forca, \"X27s/OIQ+KbmK/Wh21hqa/e5hFg=\");\n\n_c = Forca;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forca\");","map":{"version":3,"names":["useState","forca0","alfabeto","palavras","palavraEscolhida","nErros","Forca","letrasTentadas","pDividida","lacunas","palavraFoiEscolhida","escolhida","setEscolhida","letraS","setLetrasCertas","jogavel","setJogo","chuteP","setChuteP","iniciarJogo","setInicioJogo","EscolherPalavra","Math","floor","random","length","console","log","inicio","RenderizaLacunas","i","push","Erros","n","InserirLetras","map","l","index","includes","confereLetras","alert","InserirInput","event","target","value","FazerChute","testeChute"],"sources":["/home/ana/projeto8-jogoforca/src/App.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport \"./Reset.css\";\r\nimport \"./Style.css\";\r\nimport forca0 from \"./forca0.png\";\r\nimport alfabeto from \"./Letras\";\r\nimport palavras from \"./Palavras\";\r\nlet palavraEscolhida;\r\nlet nErros;\r\nexport default function Forca(){\r\n    let letrasTentadas;\r\n    let pDividida;\r\n    let lacunas = [];\r\n    let palavraFoiEscolhida = false;\r\n    const [escolhida, setEscolhida] = useState(\"\");\r\n    const [letraS, setLetrasCertas] = useState([]);\r\n    const [jogavel, setJogo] = useState(\"desabilitado\");\r\n    const [chuteP, setChuteP] = useState(\"\");        \r\n    const [iniciarJogo, setInicioJogo] = useState(palavraFoiEscolhida);\r\n   // const [arrayC, setVerificarLetra] = useState(palavraEscolhida)\r\n\r\n    //Escolhe a palavra e habilita o jogo\r\n    function EscolherPalavra(){        \r\n        palavraEscolhida = palavras[Math.floor(Math.random() * palavras.length)]; //Escolhe uma palavra do array palavras\r\n        console.log(palavraEscolhida)\r\n        let inicio = true;\r\n        RenderizaLacunas(palavraEscolhida)\r\n        setInicioJogo(inicio)\r\n        setJogo(\"habilitado\")}\r\n\r\n    //Renderizar as lacunas\r\n    function RenderizaLacunas(palavraEscolhida){\r\n        pDividida = [...palavraEscolhida]\r\n        console.log(pDividida);\r\n            for(let i =0; i < pDividida.length; i++){\r\n                lacunas.push(\"_\")\r\n            }\r\n        setEscolhida(lacunas)\r\n    }\r\n    //Verifica a imagem da forca e erros\r\n    function Erros(){\r\n        let n = 0;\r\n        return(<>\r\n        <img src={forca0} alt=\"\" />\r\n        </>)\r\n    }\r\n\r\n    //Renderiza as letras do alfabeto\r\n    function InserirLetras(){\r\n        return (<>\r\n            {alfabeto.map((l, index) => <li key={index} \r\n            className={`tecladoL ${jogavel}  ${letraS.includes(l) ? \"desabilitado\" : \"\"}`} \r\n            onClick={iniciarJogo ? (() => confereLetras(l)) : (() => \r\n            alert(\"Escolha uma Palavra para iniciar o jogo\"))}>{l}</li>)}\r\n        </>)\r\n}   \r\n    //INPUT\r\n    function InserirInput(){\r\n        return(<>\r\n        <label>Já sei a palavra!</label>\r\n        <input type=\"text\" value={chuteP} onChange={event => setChuteP(event.target.value)}></input>\r\n        <button className={` ${jogavel}`}\r\n        onClick={iniciarJogo ? (() => FazerChute) : (() => alert(\"Escolha uma Palavra para iniciar o jogo\"))}>Chutar!</button> </>)\r\n    }\r\n    //VERIFICAR O CHUTE\r\n    function FazerChute(){\r\n        console.log(\"recebeu o chute\");\r\n        let testeChute = [...chuteP];//veriricar como usar o prop console.log(pDividida);\r\n        /*if(testeChute === palavraEscolhida){            \r\n            alert(\"Você ganhou!\")\r\n        } else {\r\n            alert(\"Voce foi enforcado!\")\r\n        } */\r\n    }\r\n//Conferir letras\r\n    function confereLetras(l){\r\n       // let qteErros = 0;\r\n       console.log(palavraEscolhida);\r\n       console.log(palavraEscolhida.includes(l));\r\n       if(!palavraEscolhida.includes(l)){\r\n            letrasTentadas = [...letraS, l];\r\n            console.log(letrasTentadas);\r\n            setLetrasCertas(letrasTentadas);\r\n            console.log(\"Letra errada\")}\r\n        if(palavraEscolhida.includes(l)){\r\n            letrasTentadas = [...letraS, l];\r\n            console.log(letrasTentadas);\r\n            setLetrasCertas(letrasTentadas);\r\n            console.log(\"letracerta\")}\r\n           /*{ver como trazer a pDividida pra cá e como fazer para se a letra\r\n                estiver contida em pDividida fazer ela aparecer na lacuna}*/\r\n        \r\n    }\r\n    //Conferir acentos: string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n\r\n\r\n    //Renderiza a tela\r\n    return (<div>\r\n    <div className=\"faixaSuperior\">\r\n        <Erros />\r\n        <button onClick={EscolherPalavra}>Escolher Palavra</button>\r\n        <p>{escolhida}</p>\r\n    </div>  \r\n    <ul className=\"teclado\"><InserirLetras /></ul>      \r\n    <div className=\"chute\"><InserirInput /></div>\r\n    </div>)\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}