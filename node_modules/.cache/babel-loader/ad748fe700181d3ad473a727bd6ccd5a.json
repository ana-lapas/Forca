{"ast":null,"code":"var _jsxFileName = \"/home/ana/projeto8-jogoforca/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./Reset.css\";\nimport \"./Style.css\";\nimport inicio from \"./forca0.png\";\nimport alfabeto from \"./Letras\";\nimport palavras from \"./Palavras\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Forca() {\n  _s();\n\n  const [escolhida, setEscolhida] = useState(\"\");\n  const [letraS, setLetrasCertas] = useState([]);\n  const [jogavel, setJogo] = useState(\"desabilitado\");\n  const [chuteP, setChuteP] = useState(\"\");\n  let pDividida;\n  let lacunas = [];\n  let palavraFoiEscolhida = false;\n  const [iniciarJogo, setInicioJogo] = useState(palavraFoiEscolhida); //const [arrayC, setVerificarLetra] = useState(pDividida)\n  //Escolhe a palavra e habilita o jogo\n\n  function EscolherPalavra() {\n    let palavraEscolhida;\n    let aleatorio = Math.floor(Math.random() * palavras.length);\n    palavraEscolhida = palavras[aleatorio]; //Escolhe uma palavra do array palavras\n\n    let inicio = true;\n    RenderizaLacunas(palavraEscolhida);\n    setInicioJogo(inicio);\n    setJogo(\"habilitado\");\n  } //Renderizar as lacunas\n\n\n  function RenderizaLacunas(palavraEscolhida) {\n    pDividida = [...palavraEscolhida];\n    console.log(pDividida); //remover dps\n\n    for (let i = 0; i < pDividida.length; i++) {\n      lacunas.push(\"_\");\n    }\n\n    setEscolhida(lacunas);\n  } //Renderiza as letras do alfabeto\n\n\n  function InserirLetras() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: alfabeto.map((l, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `tecladoL ${jogavel}  ${letraS.includes(l) ? \"desabilitado\" : \"\"}`,\n        onClick: iniciarJogo ? () => confereLetras(l) : () => alert(\"Escolha uma Palavra para iniciar o jogo\"),\n        children: l\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 41\n      }, this))\n    }, void 0, false);\n  } //INPUT\n\n\n  function InserirInput() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"J\\xE1 sei a palavra!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: chuteP,\n        onChange: event => setChuteP(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: ` ${jogavel}`,\n        onClick: iniciarJogo ? () => FazerChute : () => alert(\"Escolha uma Palavra para iniciar o jogo\"),\n        children: \"Chutar!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true);\n  } //VERIFICAR O CHUTE\n\n\n  function FazerChute() {\n    let testeChute = [...chuteP]; //veriricar como usar o prop console.log(pDividida);\n\n    if (testeChute === pDividida) {\n      alert(\"Você ganhou!\");\n    } else {\n      alert(\"Voce foi enforcado!\");\n    }\n  } //Conferir letras\n\n\n  function confereLetras(l) {\n    if (!letraS.includes(l)) {\n      const letrasTentadas = [...letraS, l];\n      console.log(letrasTentadas);\n      setLetrasCertas(letrasTentadas);\n      console.log(pDividida);\n      /* if(pDividida.includes(l){ver como trazer a pDividida pra cá e como fazer para se a letra\r\n          estiver contida em pDividida fazer ela aparecer na lacuna}) */\n    }\n  } //Renderiza a tela\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faixaSuperior\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: inicio,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: EscolherPalavra,\n        children: \"Escolher Palavra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: escolhida\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"teclado\",\n      children: /*#__PURE__*/_jsxDEV(InserirLetras, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chute\",\n      children: /*#__PURE__*/_jsxDEV(InserirInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Forca, \"X27s/OIQ+KbmK/Wh21hqa/e5hFg=\");\n\n_c = Forca;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forca\");","map":{"version":3,"names":["useState","inicio","alfabeto","palavras","Forca","escolhida","setEscolhida","letraS","setLetrasCertas","jogavel","setJogo","chuteP","setChuteP","pDividida","lacunas","palavraFoiEscolhida","iniciarJogo","setInicioJogo","EscolherPalavra","palavraEscolhida","aleatorio","Math","floor","random","length","RenderizaLacunas","console","log","i","push","InserirLetras","map","l","index","includes","confereLetras","alert","InserirInput","event","target","value","FazerChute","testeChute","letrasTentadas"],"sources":["/home/ana/projeto8-jogoforca/src/App.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport \"./Reset.css\";\r\nimport \"./Style.css\";\r\nimport inicio from \"./forca0.png\";\r\n\r\nimport alfabeto from \"./Letras\";\r\nimport palavras from \"./Palavras\";\r\n\r\nexport default function Forca(){\r\n    const [escolhida, setEscolhida] = useState(\"\");\r\n    const [letraS, setLetrasCertas] = useState([]);\r\n    const [jogavel, setJogo] = useState(\"desabilitado\");\r\n    const [chuteP, setChuteP] = useState(\"\");    \r\n    let pDividida;\r\n    let lacunas = [];\r\n    let palavraFoiEscolhida = false;\r\n    const [iniciarJogo, setInicioJogo] = useState(palavraFoiEscolhida);\r\n    //const [arrayC, setVerificarLetra] = useState(pDividida)\r\n\r\n    //Escolhe a palavra e habilita o jogo\r\n    function EscolherPalavra(){\r\n        let palavraEscolhida;\r\n        let aleatorio = Math.floor(Math.random() * palavras.length);\r\n        palavraEscolhida = palavras[aleatorio]; //Escolhe uma palavra do array palavras\r\n        let inicio = true;\r\n        RenderizaLacunas(palavraEscolhida)\r\n        setInicioJogo(inicio)\r\n        setJogo(\"habilitado\")}\r\n    //Renderizar as lacunas\r\n    function RenderizaLacunas(palavraEscolhida){\r\n        pDividida = [...palavraEscolhida]\r\n        console.log(pDividida); //remover dps\r\n            for(let i =0; i < pDividida.length; i++){\r\n                lacunas.push(\"_\")\r\n            }\r\n        setEscolhida(lacunas)\r\n    }\r\n    //Renderiza as letras do alfabeto\r\n    function InserirLetras(){\r\n        return (<>\r\n            {alfabeto.map((l, index) => <li key={index} \r\n            className={`tecladoL ${jogavel}  ${letraS.includes(l) ? \"desabilitado\" : \"\"}`} onClick={iniciarJogo ? (() => confereLetras(l)) : (() => alert(\"Escolha uma Palavra para iniciar o jogo\"))}>{l}</li>)}\r\n        </>)\r\n}   \r\n    //INPUT\r\n    function InserirInput(){\r\n        return(<>\r\n        <label>Já sei a palavra!</label>\r\n        <input type=\"text\" value={chuteP} onChange={event => setChuteP(event.target.value)}></input>\r\n        <button className={` ${jogavel}`}\r\n        onClick={iniciarJogo ? (() => FazerChute) : (() => alert(\"Escolha uma Palavra para iniciar o jogo\"))}>Chutar!</button> </>)\r\n    }\r\n    //VERIFICAR O CHUTE\r\n    function FazerChute(){\r\n        let testeChute = [...chuteP];//veriricar como usar o prop console.log(pDividida);\r\n        if(testeChute === pDividida){            \r\n            alert(\"Você ganhou!\")\r\n        } else {\r\n            alert(\"Voce foi enforcado!\")\r\n        }\r\n    }\r\n//Conferir letras\r\n    function confereLetras(l){\r\n        if(!letraS.includes(l)){\r\n            const letrasTentadas = [...letraS, l];\r\n            console.log(letrasTentadas);\r\n            setLetrasCertas(letrasTentadas)\r\n            console.log(pDividida);\r\n            /* if(pDividida.includes(l){ver como trazer a pDividida pra cá e como fazer para se a letra\r\n                estiver contida em pDividida fazer ela aparecer na lacuna}) */\r\n        }            \r\n    }\r\n\r\n    //Renderiza a tela\r\n    return (<div>\r\n    <div className=\"faixaSuperior\">\r\n        <img src={inicio} alt=\"\" />\r\n        <button onClick={EscolherPalavra}>Escolher Palavra</button>\r\n        <p>{escolhida}</p>\r\n    </div>  \r\n    <ul className=\"teclado\"><InserirLetras /></ul>      \r\n    <div className=\"chute\"><InserirInput /></div>\r\n    </div>)\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}