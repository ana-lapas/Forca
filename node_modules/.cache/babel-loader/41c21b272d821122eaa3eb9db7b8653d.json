{"ast":null,"code":"var _jsxFileName = \"/home/ana/projeto8-jogoforca/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./Reset.css\";\nimport \"./Style.css\";\nimport inicio from \"./forca0.png\";\nimport alfabeto from \"./Letras\";\nimport palavras from \"./Palavras\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Forca() {\n  _s();\n\n  const [escolhida, setEscolhida] = useState(\"\");\n  const [letraS, setLetrasCertas] = useState([]);\n  const [jogavel, setJogo] = useState(\"desabilitado\");\n  const [chuteP, setChuteP] = useState(\"\");\n  let pDividida;\n  let lacunas = []; //Escolhe a palavra e habilita o jogo\n\n  function EscolherPalavra() {\n    let palavraEscolhida;\n    let aleatorio = Math.floor(Math.random() * palavras.length);\n    palavraEscolhida = palavras[aleatorio]; //Escolhe uma palavra do array palavras\n\n    pDividida = [...palavraEscolhida];\n    console.log(pDividida); //remover dps\n\n    for (let i = 0; i < pDividida.length; i++) {\n      lacunas.push(\"_\");\n    }\n\n    console.log(lacunas); //remover dps */\n\n    setEscolhida(lacunas);\n    setJogo(\"habilitado\");\n  } //Renderiza as letras do alfabeto\n\n\n  function InserirLetras() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: alfabeto.map((l, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `tecladoL ${jogavel}  ${letraS.includes(l) ? \"desabilitado\" : \"\"}`,\n        onClick: () => confereLetras(l),\n        children: l\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 41\n      }, this))\n    }, void 0, false);\n  } //INPUT\n\n\n  function InserirInput() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"J\\xE1 sei a palavra!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: ` ${jogavel}`,\n        children: \"Chutar!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true);\n  } //Conferir letras\n\n\n  function confereLetras(l) {\n    if (!letraS.includes(l)) {\n      const letrasTentadas = [...letraS, l];\n      console.log(letrasTentadas);\n      setLetrasCertas(letrasTentadas);\n      console.log(pDividida);\n      /* if(pDividida.includes(l){ver como trazer a pDividida pra cá e como fazer para se a letra\r\n          estiver contida em pDividida fazer ela aparecer na lacuna\r\n        }) */\n    }\n  } //Renderiza a tela\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faixaSuperior\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: inicio,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: EscolherPalavra,\n        children: \"Escolher Palavra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: escolhida\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"teclado\",\n      children: /*#__PURE__*/_jsxDEV(InserirLetras, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chute\",\n      children: /*#__PURE__*/_jsxDEV(InserirInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Forca, \"XKtxJBAW12h3fhEAJxSOWRgHMSs=\");\n\n_c = Forca;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forca\");","map":{"version":3,"names":["useState","inicio","alfabeto","palavras","Forca","escolhida","setEscolhida","letraS","setLetrasCertas","jogavel","setJogo","chuteP","setChuteP","pDividida","lacunas","EscolherPalavra","palavraEscolhida","aleatorio","Math","floor","random","length","console","log","i","push","InserirLetras","map","l","index","includes","confereLetras","InserirInput","letrasTentadas"],"sources":["/home/ana/projeto8-jogoforca/src/App.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport \"./Reset.css\";\r\nimport \"./Style.css\";\r\nimport inicio from \"./forca0.png\";\r\nimport alfabeto from \"./Letras\";\r\nimport palavras from \"./Palavras\";\r\n\r\nexport default function Forca(){\r\n    const [escolhida, setEscolhida] = useState(\"\");\r\n    const [letraS, setLetrasCertas] = useState([]);\r\n    const [jogavel, setJogo] = useState(\"desabilitado\");\r\n    const [chuteP, setChuteP] = useState(\"\");\r\n    let pDividida;\r\n    let lacunas = [];\r\n\r\n    //Escolhe a palavra e habilita o jogo\r\n    function EscolherPalavra(){\r\n    let palavraEscolhida;\r\n    let aleatorio = Math.floor(Math.random() * palavras.length);\r\n    palavraEscolhida = palavras[aleatorio]; //Escolhe uma palavra do array palavras\r\n    pDividida = [...palavraEscolhida]\r\n    console.log(pDividida); //remover dps\r\n        for(let i =0; i < pDividida.length; i++){\r\n            lacunas.push(\"_\")\r\n        }\r\n    console.log(lacunas) //remover dps */\r\n    setEscolhida(lacunas)\r\n    setJogo(\"habilitado\")\r\n}   \r\n    //Renderiza as letras do alfabeto\r\n    function InserirLetras(){\r\n        return (<>\r\n            {alfabeto.map((l, index) => <li key={index} \r\n            className={`tecladoL ${jogavel}  ${letraS.includes(l) ? \"desabilitado\" : \"\"}`} onClick={() => confereLetras(l)}>{l}</li>)}\r\n        </>)\r\n}   \r\n    //INPUT\r\n    function InserirInput(){\r\n        return(<>\r\n        <label>Já sei a palavra!</label>\r\n        <input ></input>\r\n        <button className={` ${jogavel}`}>Chutar!</button> </>)\r\n    }\r\n//Conferir letras\r\n    function confereLetras(l){\r\n        if(!letraS.includes(l)){\r\n            const letrasTentadas = [...letraS, l];\r\n            console.log(letrasTentadas);\r\n            setLetrasCertas(letrasTentadas)\r\n            console.log(pDividida);\r\n            /* if(pDividida.includes(l){ver como trazer a pDividida pra cá e como fazer para se a letra\r\n                estiver contida em pDividida fazer ela aparecer na lacuna\r\n\r\n            }) */\r\n        }            \r\n    }\r\n\r\n    //Renderiza a tela\r\n    return (<div>\r\n    <div className=\"faixaSuperior\">\r\n        <img src={inicio} alt=\"\" />\r\n        <button onClick={EscolherPalavra}>Escolher Palavra</button>\r\n        <p>{escolhida}</p>\r\n    </div>  \r\n    <ul className=\"teclado\"><InserirLetras /></ul>      \r\n    <div className=\"chute\"><InserirInput /></div>\r\n    </div>)\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}